{"version":3,"file":"runette-ngx-leaflet-locate.umd.js","sources":["../../../node_modules/leaflet.locatecontrol/src/L.Control.Locate.js","../../../src/lib/ngx-leaflet-locate.component.ts","../../../src/lib/ngx-leaflet-locate.module.ts","../../../src/public-api.ts","../../../src/runette-ngx-leaflet-locate.ts"],"sourcesContent":["/*!\nCopyright (c) 2016 Dominik Moritz\n\nThis file is part of the leaflet locate control. It is licensed under the MIT license.\nYou can find the project at: https://github.com/domoritz/leaflet-locatecontrol\n*/\n(function (factory, window) {\n  // see https://github.com/Leaflet/Leaflet/blob/master/PLUGIN-GUIDE.md#module-loaders\n  // for details on how to structure a leaflet plugin.\n\n  // define an AMD module that relies on 'leaflet'\n  if (typeof define === \"function\" && define.amd) {\n    define([\"leaflet\"], factory);\n\n    // define a Common JS module that relies on 'leaflet'\n  } else if (typeof exports === \"object\") {\n    if (typeof window !== \"undefined\" && window.L) {\n      module.exports = factory(L);\n    } else {\n      module.exports = factory(require(\"leaflet\"));\n    }\n  }\n\n  // attach your plugin to the global 'L' variable\n  if (typeof window !== \"undefined\" && window.L) {\n    window.L.Control.Locate = factory(L);\n  }\n})(function (L) {\n  const LDomUtilApplyClassesMethod = (method, element, classNames) => {\n    classNames = classNames.split(\" \");\n    classNames.forEach(function (className) {\n      L.DomUtil[method].call(this, element, className);\n    });\n  };\n\n  const addClasses = (el, names) => LDomUtilApplyClassesMethod(\"addClass\", el, names);\n  const removeClasses = (el, names) => LDomUtilApplyClassesMethod(\"removeClass\", el, names);\n\n  /**\n   * Compatible with L.Circle but a true marker instead of a path\n   */\n  const LocationMarker = L.Marker.extend({\n    initialize(latlng, options) {\n      L.Util.setOptions(this, options);\n      this._latlng = latlng;\n      this.createIcon();\n    },\n\n    /**\n     * Create a styled circle location marker\n     */\n    createIcon() {\n      const opt = this.options;\n\n      let style = \"\";\n\n      if (opt.color !== undefined) {\n        style += `stroke:${opt.color};`;\n      }\n      if (opt.weight !== undefined) {\n        style += `stroke-width:${opt.weight};`;\n      }\n      if (opt.fillColor !== undefined) {\n        style += `fill:${opt.fillColor};`;\n      }\n      if (opt.fillOpacity !== undefined) {\n        style += `fill-opacity:${opt.fillOpacity};`;\n      }\n      if (opt.opacity !== undefined) {\n        style += `opacity:${opt.opacity};`;\n      }\n\n      const icon = this._getIconSVG(opt, style);\n\n      this._locationIcon = L.divIcon({\n        className: icon.className,\n        html: icon.svg,\n        iconSize: [icon.w, icon.h]\n      });\n\n      this.setIcon(this._locationIcon);\n    },\n\n    /**\n     * Return the raw svg for the shape\n     *\n     * Split so can be easily overridden\n     */\n    _getIconSVG(options, style) {\n      const r = options.radius;\n      const w = options.weight;\n      const s = r + w;\n      const s2 = s * 2;\n      const svg =\n        `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${s2}\" height=\"${s2}\" version=\"1.1\" viewBox=\"-${s} -${s} ${s2} ${s2}\">` +\n        '<circle r=\"' +\n        r +\n        '\" style=\"' +\n        style +\n        '\" />' +\n        \"</svg>\";\n      return {\n        className: \"leaflet-control-locate-location\",\n        svg,\n        w: s2,\n        h: s2\n      };\n    },\n\n    setStyle(style) {\n      L.Util.setOptions(this, style);\n      this.createIcon();\n    }\n  });\n\n  const CompassMarker = LocationMarker.extend({\n    initialize(latlng, heading, options) {\n      L.Util.setOptions(this, options);\n      this._latlng = latlng;\n      this._heading = heading;\n      this.createIcon();\n    },\n\n    setHeading(heading) {\n      this._heading = heading;\n    },\n\n    /**\n     * Create a styled arrow compass marker\n     */\n    _getIconSVG(options, style) {\n      const r = options.radius;\n      const w = options.width + options.weight;\n      const h = (r + options.depth + options.weight) * 2;\n      const path = `M0,0 l${options.width / 2},${options.depth} l-${w},0 z`;\n      const svgstyle = `transform: rotate(${this._heading}deg)`;\n      const svg =\n        `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${w}\" height=\"${h}\" version=\"1.1\" viewBox=\"-${w / 2} 0 ${w} ${h}\" style=\"${svgstyle}\">` +\n        '<path d=\"' +\n        path +\n        '\" style=\"' +\n        style +\n        '\" />' +\n        \"</svg>\";\n      return {\n        className: \"leaflet-control-locate-heading\",\n        svg,\n        w,\n        h\n      };\n    }\n  });\n\n  const LocateControl = L.Control.extend({\n    options: {\n      /** Position of the control */\n      position: \"topleft\",\n      /** The layer that the user's location should be drawn on. By default creates a new layer. */\n      layer: undefined,\n      /**\n       * Automatically sets the map view (zoom and pan) to the user's location as it updates.\n       * While the map is following the user's location, the control is in the `following` state,\n       * which changes the style of the control and the circle marker.\n       *\n       * Possible values:\n       *  - false: never updates the map view when location changes.\n       *  - 'once': set the view when the location is first determined\n       *  - 'always': always updates the map view when location changes.\n       *              The map view follows the user's location.\n       *  - 'untilPan': like 'always', except stops updating the\n       *                view if the user has manually panned the map.\n       *                The map view follows the user's location until she pans.\n       *  - 'untilPanOrZoom': (default) like 'always', except stops updating the\n       *                view if the user has manually panned the map.\n       *                The map view follows the user's location until she pans.\n       */\n      setView: \"untilPanOrZoom\",\n      /** Keep the current map zoom level when setting the view and only pan. */\n      keepCurrentZoomLevel: false,\n      /** After activating the plugin by clicking on the icon, zoom to the selected zoom level, even when keepCurrentZoomLevel is true. Set to 'false' to disable this feature. */\n      initialZoomLevel: false,\n      /**\n       * This callback can be used to override the viewport tracking\n       * This function should return a LatLngBounds object.\n       *\n       * For example to extend the viewport to ensure that a particular LatLng is visible:\n       *\n       * getLocationBounds: function(locationEvent) {\n       *    return locationEvent.bounds.extend([-33.873085, 151.219273]);\n       * },\n       */\n      getLocationBounds(locationEvent) {\n        return locationEvent.bounds;\n      },\n      /** Smooth pan and zoom to the location of the marker. Only works in Leaflet 1.0+. */\n      flyTo: false,\n      /**\n       * The user location can be inside and outside the current view when the user clicks on the\n       * control that is already active. Both cases can be configures separately.\n       * Possible values are:\n       *  - 'setView': zoom and pan to the current location\n       *  - 'stop': stop locating and remove the location marker\n       */\n      clickBehavior: {\n        /** What should happen if the user clicks on the control while the location is within the current view. */\n        inView: \"stop\",\n        /** What should happen if the user clicks on the control while the location is outside the current view. */\n        outOfView: \"setView\",\n        /**\n         * What should happen if the user clicks on the control while the location is within the current view\n         * and we could be following but are not. Defaults to a special value which inherits from 'inView';\n         */\n        inViewNotFollowing: \"inView\"\n      },\n      /**\n       * If set, save the map bounds just before centering to the user's\n       * location. When control is disabled, set the view back to the\n       * bounds that were saved.\n       */\n      returnToPrevBounds: false,\n      /**\n       * Keep a cache of the location after the user deactivates the control. If set to false, the user has to wait\n       * until the locate API returns a new location before they see where they are again.\n       */\n      cacheLocation: true,\n      /** If set, a circle that shows the location accuracy is drawn. */\n      drawCircle: true,\n      /** If set, the marker at the users' location is drawn. */\n      drawMarker: true,\n      /** If set and supported then show the compass heading */\n      showCompass: true,\n      /** The class to be used to create the marker. For example L.CircleMarker or L.Marker */\n      markerClass: LocationMarker,\n      /** The class us be used to create the compass bearing arrow */\n      compassClass: CompassMarker,\n      /** Accuracy circle style properties. NOTE these styles should match the css animations styles */\n      circleStyle: {\n        className: \"leaflet-control-locate-circle\",\n        color: \"#136AEC\",\n        fillColor: \"#136AEC\",\n        fillOpacity: 0.15,\n        weight: 0\n      },\n      /** Inner marker style properties. Only works if your marker class supports `setStyle`. */\n      markerStyle: {\n        className: \"leaflet-control-locate-marker\",\n        color: \"#fff\",\n        fillColor: \"#2A93EE\",\n        fillOpacity: 1,\n        weight: 3,\n        opacity: 1,\n        radius: 9\n      },\n      /** Compass */\n      compassStyle: {\n        fillColor: \"#2A93EE\",\n        fillOpacity: 1,\n        weight: 0,\n        color: \"#fff\",\n        opacity: 1,\n        radius: 9, // How far is the arrow is from the center of of the marker\n        width: 9, // Width of the arrow\n        depth: 6 // Length of the arrow\n      },\n      /**\n       * Changes to accuracy circle and inner marker while following.\n       * It is only necessary to provide the properties that should change.\n       */\n      followCircleStyle: {},\n      followMarkerStyle: {\n        // color: '#FFA500',\n        // fillColor: '#FFB000'\n      },\n      followCompassStyle: {},\n      /** The CSS class for the icon. For example fa-location-arrow or fa-map-marker */\n      icon: \"leaflet-control-locate-location-arrow\",\n      iconLoading: \"leaflet-control-locate-spinner\",\n      /** The element to be created for icons. For example span or i */\n      iconElementTag: \"span\",\n      /** The element to be created for the text. For example small or span */\n      textElementTag: \"small\",\n      /** Padding around the accuracy circle. */\n      circlePadding: [0, 0],\n      /** Use metric units. */\n      metric: true,\n      /**\n       * This callback can be used in case you would like to override button creation behavior.\n       * This is useful for DOM manipulation frameworks such as angular etc.\n       * This function should return an object with HtmlElement for the button (link property) and the icon (icon property).\n       */\n      createButtonCallback(container, options) {\n        const link = L.DomUtil.create(\"a\", \"leaflet-bar-part leaflet-bar-part-single\", container);\n        link.title = options.strings.title;\n        link.href = \"#\";\n        link.setAttribute(\"role\", \"button\");\n        const icon = L.DomUtil.create(options.iconElementTag, options.icon, link);\n\n        if (options.strings.text !== undefined) {\n          const text = L.DomUtil.create(options.textElementTag, \"leaflet-locate-text\", link);\n          text.textContent = options.strings.text;\n          link.classList.add(\"leaflet-locate-text-active\");\n          link.parentNode.style.display = \"flex\";\n          if (options.icon.length > 0) {\n            icon.classList.add(\"leaflet-locate-icon\");\n          }\n        }\n\n        return { link, icon };\n      },\n      /** This event is called in case of any location error that is not a time out error. */\n      onLocationError(err, control) {\n        alert(err.message);\n      },\n      /**\n       * This event is called when the user's location is outside the bounds set on the map.\n       * The event is called repeatedly when the location changes.\n       */\n      onLocationOutsideMapBounds(control) {\n        control.stop();\n        alert(control.options.strings.outsideMapBoundsMsg);\n      },\n      /** Display a pop-up when the user click on the inner marker. */\n      showPopup: true,\n      strings: {\n        title: \"Show me where I am\",\n        metersUnit: \"meters\",\n        feetUnit: \"feet\",\n        popup: \"You are within {distance} {unit} from this point\",\n        outsideMapBoundsMsg: \"You seem located outside the boundaries of the map\"\n      },\n      /** The default options passed to leaflets locate method. */\n      locateOptions: {\n        maxZoom: Infinity,\n        watch: true, // if you overwrite this, visualization cannot be updated\n        setView: false // have to set this to false because we have to\n        // do setView manually\n      }\n    },\n\n    initialize(options) {\n      // set default options if nothing is set (merge one step deep)\n      for (const i in options) {\n        if (typeof this.options[i] === \"object\") {\n          L.extend(this.options[i], options[i]);\n        } else {\n          this.options[i] = options[i];\n        }\n      }\n\n      // extend the follow marker style and circle from the normal style\n      this.options.followMarkerStyle = L.extend({}, this.options.markerStyle, this.options.followMarkerStyle);\n      this.options.followCircleStyle = L.extend({}, this.options.circleStyle, this.options.followCircleStyle);\n      this.options.followCompassStyle = L.extend({}, this.options.compassStyle, this.options.followCompassStyle);\n    },\n\n    /**\n     * Add control to map. Returns the container for the control.\n     */\n    onAdd(map) {\n      const container = L.DomUtil.create(\"div\", \"leaflet-control-locate leaflet-bar leaflet-control\");\n      this._container = container;\n      this._map = map;\n      this._layer = this.options.layer || new L.LayerGroup();\n      this._layer.addTo(map);\n      this._event = undefined;\n      this._compassHeading = null;\n      this._prevBounds = null;\n\n      const linkAndIcon = this.options.createButtonCallback(container, this.options);\n      this._link = linkAndIcon.link;\n      this._icon = linkAndIcon.icon;\n\n      L.DomEvent.on(\n        this._link,\n        \"click\",\n        function (ev) {\n          L.DomEvent.stopPropagation(ev);\n          L.DomEvent.preventDefault(ev);\n          this._onClick();\n        },\n        this\n      ).on(this._link, \"dblclick\", L.DomEvent.stopPropagation);\n\n      this._resetVariables();\n\n      this._map.on(\"unload\", this._unload, this);\n\n      return container;\n    },\n\n    /**\n     * This method is called when the user clicks on the control.\n     */\n    _onClick() {\n      this._justClicked = true;\n      const wasFollowing = this._isFollowing();\n      this._userPanned = false;\n      this._userZoomed = false;\n\n      if (this._active && !this._event) {\n        // click while requesting\n        this.stop();\n      } else if (this._active) {\n        const behaviors = this.options.clickBehavior;\n        let behavior = behaviors.outOfView;\n        if (this._map.getBounds().contains(this._event.latlng)) {\n          behavior = wasFollowing ? behaviors.inView : behaviors.inViewNotFollowing;\n        }\n\n        // Allow inheriting from another behavior\n        if (behaviors[behavior]) {\n          behavior = behaviors[behavior];\n        }\n\n        switch (behavior) {\n          case \"setView\":\n            this.setView();\n            break;\n          case \"stop\":\n            this.stop();\n            if (this.options.returnToPrevBounds) {\n              const f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n              f.bind(this._map)(this._prevBounds);\n            }\n            break;\n        }\n      } else {\n        if (this.options.returnToPrevBounds) {\n          this._prevBounds = this._map.getBounds();\n        }\n        this.start();\n      }\n\n      this._updateContainerStyle();\n    },\n\n    /**\n     * Starts the plugin:\n     * - activates the engine\n     * - draws the marker (if coordinates available)\n     */\n    start() {\n      this._activate();\n\n      if (this._event) {\n        this._drawMarker(this._map);\n\n        // if we already have a location but the user clicked on the control\n        if (this.options.setView) {\n          this.setView();\n        }\n      }\n      this._updateContainerStyle();\n    },\n\n    /**\n     * Stops the plugin:\n     * - deactivates the engine\n     * - reinitializes the button\n     * - removes the marker\n     */\n    stop() {\n      this._deactivate();\n\n      this._cleanClasses();\n      this._resetVariables();\n\n      this._removeMarker();\n    },\n\n    /**\n     * Keep the control active but stop following the location\n     */\n    stopFollowing() {\n      this._userPanned = true;\n      this._updateContainerStyle();\n      this._drawMarker();\n    },\n\n    /**\n     * This method launches the location engine.\n     * It is called before the marker is updated,\n     * event if it does not mean that the event will be ready.\n     *\n     * Override it if you want to add more functionalities.\n     * It should set the this._active to true and do nothing if\n     * this._active is true.\n     */\n    _activate() {\n      if (this._active || !this._map) {\n        return;\n      }\n\n      this._map.locate(this.options.locateOptions);\n      this._map.fire(\"locateactivate\", this);\n      this._active = true;\n\n      // bind event listeners\n      this._map.on(\"locationfound\", this._onLocationFound, this);\n      this._map.on(\"locationerror\", this._onLocationError, this);\n      this._map.on(\"dragstart\", this._onDrag, this);\n      this._map.on(\"zoomstart\", this._onZoom, this);\n      this._map.on(\"zoomend\", this._onZoomEnd, this);\n      if (this.options.showCompass) {\n        const oriAbs = \"ondeviceorientationabsolute\" in window;\n        if (oriAbs || \"ondeviceorientation\" in window) {\n          const _this = this;\n          const deviceorientation = function () {\n            L.DomEvent.on(window, oriAbs ? \"deviceorientationabsolute\" : \"deviceorientation\", _this._onDeviceOrientation, _this);\n          };\n          if (DeviceOrientationEvent && typeof DeviceOrientationEvent.requestPermission === \"function\") {\n            DeviceOrientationEvent.requestPermission().then(function (permissionState) {\n              if (permissionState === \"granted\") {\n                deviceorientation();\n              }\n            });\n          } else {\n            deviceorientation();\n          }\n        }\n      }\n    },\n\n    /**\n     * Called to stop the location engine.\n     *\n     * Override it to shutdown any functionalities you added on start.\n     */\n    _deactivate() {\n      if (!this._active || !this._map) {\n        return;\n      }\n\n      this._map.stopLocate();\n      this._map.fire(\"locatedeactivate\", this);\n      this._active = false;\n\n      if (!this.options.cacheLocation) {\n        this._event = undefined;\n      }\n\n      // unbind event listeners\n      this._map.off(\"locationfound\", this._onLocationFound, this);\n      this._map.off(\"locationerror\", this._onLocationError, this);\n      this._map.off(\"dragstart\", this._onDrag, this);\n      this._map.off(\"zoomstart\", this._onZoom, this);\n      this._map.off(\"zoomend\", this._onZoomEnd, this);\n      if (this.options.showCompass) {\n        this._compassHeading = null;\n        if (\"ondeviceorientationabsolute\" in window) {\n          L.DomEvent.off(window, \"deviceorientationabsolute\", this._onDeviceOrientation, this);\n        } else if (\"ondeviceorientation\" in window) {\n          L.DomEvent.off(window, \"deviceorientation\", this._onDeviceOrientation, this);\n        }\n      }\n    },\n\n    /**\n     * Zoom (unless we should keep the zoom level) and an to the current view.\n     */\n    setView() {\n      this._drawMarker();\n      if (this._isOutsideMapBounds()) {\n        this._event = undefined; // clear the current location so we can get back into the bounds\n        this.options.onLocationOutsideMapBounds(this);\n      } else {\n        if (this._justClicked && this.options.initialZoomLevel !== false) {\n          var f = this.options.flyTo ? this._map.flyTo : this._map.setView;\n          f.bind(this._map)([this._event.latitude, this._event.longitude], this.options.initialZoomLevel);\n        } else if (this.options.keepCurrentZoomLevel) {\n          var f = this.options.flyTo ? this._map.flyTo : this._map.panTo;\n          f.bind(this._map)([this._event.latitude, this._event.longitude]);\n        } else {\n          var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n          // Ignore zoom events while setting the viewport as these would stop following\n          this._ignoreEvent = true;\n          f.bind(this._map)(this.options.getLocationBounds(this._event), {\n            padding: this.options.circlePadding,\n            maxZoom: this.options.initialZoomLevel || this.options.locateOptions.maxZoom\n          });\n          L.Util.requestAnimFrame(function () {\n            // Wait until after the next animFrame because the flyTo can be async\n            this._ignoreEvent = false;\n          }, this);\n        }\n      }\n    },\n\n    /**\n     *\n     */\n    _drawCompass() {\n      if (!this._event) {\n        return;\n      }\n\n      const latlng = this._event.latlng;\n\n      if (this.options.showCompass && latlng && this._compassHeading !== null) {\n        const cStyle = this._isFollowing() ? this.options.followCompassStyle : this.options.compassStyle;\n        if (!this._compass) {\n          this._compass = new this.options.compassClass(latlng, this._compassHeading, cStyle).addTo(this._layer);\n        } else {\n          this._compass.setLatLng(latlng);\n          this._compass.setHeading(this._compassHeading);\n          // If the compassClass can be updated with setStyle, update it.\n          if (this._compass.setStyle) {\n            this._compass.setStyle(cStyle);\n          }\n        }\n        //\n      }\n      if (this._compass && (!this.options.showCompass || this._compassHeading === null)) {\n        this._compass.removeFrom(this._layer);\n        this._compass = null;\n      }\n    },\n\n    /**\n     * Draw the marker and accuracy circle on the map.\n     *\n     * Uses the event retrieved from onLocationFound from the map.\n     */\n    _drawMarker() {\n      if (this._event.accuracy === undefined) {\n        this._event.accuracy = 0;\n      }\n\n      const radius = this._event.accuracy;\n      const latlng = this._event.latlng;\n\n      // circle with the radius of the location's accuracy\n      if (this.options.drawCircle) {\n        const style = this._isFollowing() ? this.options.followCircleStyle : this.options.circleStyle;\n\n        if (!this._circle) {\n          this._circle = L.circle(latlng, radius, style).addTo(this._layer);\n        } else {\n          this._circle.setLatLng(latlng).setRadius(radius).setStyle(style);\n        }\n      }\n\n      let distance;\n      let unit;\n      if (this.options.metric) {\n        distance = radius.toFixed(0);\n        unit = this.options.strings.metersUnit;\n      } else {\n        distance = (radius * 3.2808399).toFixed(0);\n        unit = this.options.strings.feetUnit;\n      }\n\n      // small inner marker\n      if (this.options.drawMarker) {\n        const mStyle = this._isFollowing() ? this.options.followMarkerStyle : this.options.markerStyle;\n        if (!this._marker) {\n          this._marker = new this.options.markerClass(latlng, mStyle).addTo(this._layer);\n        } else {\n          this._marker.setLatLng(latlng);\n          // If the markerClass can be updated with setStyle, update it.\n          if (this._marker.setStyle) {\n            this._marker.setStyle(mStyle);\n          }\n        }\n      }\n\n      this._drawCompass();\n\n      const t = this.options.strings.popup;\n      function getPopupText() {\n        if (typeof t === \"string\") {\n          return L.Util.template(t, { distance, unit });\n        } else if (typeof t === \"function\") {\n          return t({ distance, unit });\n        } else {\n          return t;\n        }\n      }\n      if (this.options.showPopup && t && this._marker) {\n        this._marker.bindPopup(getPopupText())._popup.setLatLng(latlng);\n      }\n      if (this.options.showPopup && t && this._compass) {\n        this._compass.bindPopup(getPopupText())._popup.setLatLng(latlng);\n      }\n    },\n\n    /**\n     * Remove the marker from map.\n     */\n    _removeMarker() {\n      this._layer.clearLayers();\n      this._marker = undefined;\n      this._circle = undefined;\n    },\n\n    /**\n     * Unload the plugin and all event listeners.\n     * Kind of the opposite of onAdd.\n     */\n    _unload() {\n      this.stop();\n      this._map.off(\"unload\", this._unload, this);\n    },\n\n    /**\n     * Sets the compass heading\n     */\n    _setCompassHeading(angle) {\n      if (!isNaN(parseFloat(angle)) && isFinite(angle)) {\n        angle = Math.round(angle);\n\n        this._compassHeading = angle;\n        L.Util.requestAnimFrame(this._drawCompass, this);\n      } else {\n        this._compassHeading = null;\n      }\n    },\n\n    /**\n     * If the compass fails calibration just fail safely and remove the compass\n     */\n    _onCompassNeedsCalibration() {\n      this._setCompassHeading();\n    },\n\n    /**\n     * Process and normalise compass events\n     */\n    _onDeviceOrientation(e) {\n      if (!this._active) {\n        return;\n      }\n\n      if (e.webkitCompassHeading) {\n        // iOS\n        this._setCompassHeading(e.webkitCompassHeading);\n      } else if (e.absolute && e.alpha) {\n        // Android\n        this._setCompassHeading(360 - e.alpha);\n      }\n    },\n\n    /**\n     * Calls deactivate and dispatches an error.\n     */\n    _onLocationError(err) {\n      // ignore time out error if the location is watched\n      if (err.code == 3 && this.options.locateOptions.watch) {\n        return;\n      }\n\n      this.stop();\n      this.options.onLocationError(err, this);\n    },\n\n    /**\n     * Stores the received event and updates the marker.\n     */\n    _onLocationFound(e) {\n      // no need to do anything if the location has not changed\n      if (this._event && this._event.latlng.lat === e.latlng.lat && this._event.latlng.lng === e.latlng.lng && this._event.accuracy === e.accuracy) {\n        return;\n      }\n\n      if (!this._active) {\n        // we may have a stray event\n        return;\n      }\n\n      this._event = e;\n\n      this._drawMarker();\n      this._updateContainerStyle();\n\n      switch (this.options.setView) {\n        case \"once\":\n          if (this._justClicked) {\n            this.setView();\n          }\n          break;\n        case \"untilPan\":\n          if (!this._userPanned) {\n            this.setView();\n          }\n          break;\n        case \"untilPanOrZoom\":\n          if (!this._userPanned && !this._userZoomed) {\n            this.setView();\n          }\n          break;\n        case \"always\":\n          this.setView();\n          break;\n        case false:\n          // don't set the view\n          break;\n      }\n\n      this._justClicked = false;\n    },\n\n    /**\n     * When the user drags. Need a separate event so we can bind and unbind event listeners.\n     */\n    _onDrag() {\n      // only react to drags once we have a location\n      if (this._event && !this._ignoreEvent) {\n        this._userPanned = true;\n        this._updateContainerStyle();\n        this._drawMarker();\n      }\n    },\n\n    /**\n     * When the user zooms. Need a separate event so we can bind and unbind event listeners.\n     */\n    _onZoom() {\n      // only react to drags once we have a location\n      if (this._event && !this._ignoreEvent) {\n        this._userZoomed = true;\n        this._updateContainerStyle();\n        this._drawMarker();\n      }\n    },\n\n    /**\n     * After a zoom ends update the compass and handle sideways zooms\n     */\n    _onZoomEnd() {\n      if (this._event) {\n        this._drawCompass();\n      }\n\n      if (this._event && !this._ignoreEvent) {\n        // If we have zoomed in and out and ended up sideways treat it as a pan\n        if (this._marker && !this._map.getBounds().pad(-0.3).contains(this._marker.getLatLng())) {\n          this._userPanned = true;\n          this._updateContainerStyle();\n          this._drawMarker();\n        }\n      }\n    },\n\n    /**\n     * Compute whether the map is following the user location with pan and zoom.\n     */\n    _isFollowing() {\n      if (!this._active) {\n        return false;\n      }\n\n      if (this.options.setView === \"always\") {\n        return true;\n      } else if (this.options.setView === \"untilPan\") {\n        return !this._userPanned;\n      } else if (this.options.setView === \"untilPanOrZoom\") {\n        return !this._userPanned && !this._userZoomed;\n      }\n    },\n\n    /**\n     * Check if location is in map bounds\n     */\n    _isOutsideMapBounds() {\n      if (this._event === undefined) {\n        return false;\n      }\n      return this._map.options.maxBounds && !this._map.options.maxBounds.contains(this._event.latlng);\n    },\n\n    /**\n     * Toggles button class between following and active.\n     */\n    _updateContainerStyle() {\n      if (!this._container) {\n        return;\n      }\n\n      if (this._active && !this._event) {\n        // active but don't have a location yet\n        this._setClasses(\"requesting\");\n      } else if (this._isFollowing()) {\n        this._setClasses(\"following\");\n      } else if (this._active) {\n        this._setClasses(\"active\");\n      } else {\n        this._cleanClasses();\n      }\n    },\n\n    /**\n     * Sets the CSS classes for the state.\n     */\n    _setClasses(state) {\n      if (state == \"requesting\") {\n        removeClasses(this._container, \"active following\");\n        addClasses(this._container, \"requesting\");\n\n        removeClasses(this._icon, this.options.icon);\n        addClasses(this._icon, this.options.iconLoading);\n      } else if (state == \"active\") {\n        removeClasses(this._container, \"requesting following\");\n        addClasses(this._container, \"active\");\n\n        removeClasses(this._icon, this.options.iconLoading);\n        addClasses(this._icon, this.options.icon);\n      } else if (state == \"following\") {\n        removeClasses(this._container, \"requesting\");\n        addClasses(this._container, \"active following\");\n\n        removeClasses(this._icon, this.options.iconLoading);\n        addClasses(this._icon, this.options.icon);\n      }\n    },\n\n    /**\n     * Removes all classes from button.\n     */\n    _cleanClasses() {\n      L.DomUtil.removeClass(this._container, \"requesting\");\n      L.DomUtil.removeClass(this._container, \"active\");\n      L.DomUtil.removeClass(this._container, \"following\");\n\n      removeClasses(this._icon, this.options.iconLoading);\n      addClasses(this._icon, this.options.icon);\n    },\n\n    /**\n     * Reinitializes state variables.\n     */\n    _resetVariables() {\n      // whether locate is active or not\n      this._active = false;\n\n      // true if the control was clicked for the first time\n      // we need this so we can pan and zoom once we have the location\n      this._justClicked = false;\n\n      // true if the user has panned the map after clicking the control\n      this._userPanned = false;\n\n      // true if the user has zoomed the map after clicking the control\n      this._userZoomed = false;\n    }\n  });\n\n  L.control.locate = (options) => new L.Control.Locate(options);\n\n  return LocateControl;\n}, window);\n","/// <reference path=\"../../node_modules/@types/leaflet.locatecontrol/index.d.ts\" />\nimport { Component, OnInit, OnDestroy, Input, Output, EventEmitter} from '@angular/core';\nimport {Map, control, Control, LocationEvent} from 'leaflet';\nimport '../../../../node_modules/leaflet.locatecontrol/dist/L.Control.Locate.min.js';\n\ninterface customMap extends Map {\n  _unload: any;\n}\n\n@Component({\n  selector: 'leaflet-locate-control',\n  template: '',\n  styleUrls: []\n})\nexport class NgxLeafletLocateComponent implements OnInit, OnDestroy {\n  private _map?: Map;\n  @Output() location$: EventEmitter<LocationEvent> = new EventEmitter;\n  public control: Control.Locate = new Control.Locate();\n\n  constructor() { \n  };\n\n  ngOnInit() {\n  };\n\n  ngOnDestroy() {\n    if (this.control && this.map) {\n      this.control.stop();\n      this._map?.off(\"unload\", (this.map as customMap)?._unload, this.control);\n    }\n    if (this._map && this.control) this._map.removeControl(this.control);\n    this._map?.off('locationfound')\n  };\n\n  @Input() options: Control.LocateOptions= {};\n\n  @Input() set map(map: Map | undefined){\n    if (map) {\n      this._map = map;\n      this.control =  control.locate(this.options);\n      this.control.addTo(map);\n      let location$ = this.location$;\n      map.on('locationfound', e => {\n        location$.emit(e);\n      });\n    }\n  }\n  \n  get map(): Map | undefined {\n    return this._map\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxLeafletLocateComponent } from './ngx-leaflet-locate.component';\n\n\n@NgModule({\n  declarations: [NgxLeafletLocateComponent],\n  imports: [],\n  exports: [\n    NgxLeafletLocateComponent,\n  ]\n})\nexport class NgxLeafletLocateModule { }\n","/*\n * Public API Surface of ngx-leaflet-locate\n */\n\nexport * from './lib/ngx-leaflet-locate.component';\nexport * from './lib/ngx-leaflet-locate.module';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["factory","window","define","amd","L","module","require","Control","Locate","LDomUtilApplyClassesMethod","method","element","classNames","split","forEach","className","DomUtil","call","this","addClasses","el","names","removeClasses","LocationMarker","Marker","extend","initialize","latlng","options","Util","setOptions","_latlng","createIcon","opt","let","style","undefined","color","weight","fillColor","fillOpacity","opacity","icon","_getIconSVG","_locationIcon","divIcon","html","svg","iconSize","w","h","setIcon","r","radius","s","s2","setStyle","CompassMarker","heading","_heading","setHeading","width","depth","path","LocateControl","position","layer","setView","keepCurrentZoomLevel","initialZoomLevel","getLocationBounds","locationEvent","bounds","flyTo","clickBehavior","inView","outOfView","inViewNotFollowing","returnToPrevBounds","cacheLocation","drawCircle","drawMarker","showCompass","markerClass","compassClass","circleStyle","markerStyle","compassStyle","followCircleStyle","followMarkerStyle","followCompassStyle","iconLoading","iconElementTag","textElementTag","circlePadding","metric","createButtonCallback","container","link","create","title","strings","href","setAttribute","text","textContent","classList","add","parentNode","display","length","onLocationError","err","control","alert","message","onLocationOutsideMapBounds","stop","outsideMapBoundsMsg","showPopup","metersUnit","feetUnit","popup","locateOptions","maxZoom","Infinity","watch","i","onAdd","map","linkAndIcon","_container","_map","_layer","LayerGroup","addTo","_event","_compassHeading","_prevBounds","_link","_icon","DomEvent","on","ev","stopPropagation","preventDefault","_onClick","_resetVariables","_unload","_justClicked","wasFollowing","_isFollowing","_userPanned","_userZoomed","_active","behaviors","behavior","getBounds","contains","flyToBounds","fitBounds","bind","start","_updateContainerStyle","_activate","_drawMarker","_deactivate","_cleanClasses","_removeMarker","stopFollowing","locate","fire","_onLocationFound","_onLocationError","_onDrag","_onZoom","_onZoomEnd","oriAbs","_this","deviceorientation","_onDeviceOrientation","DeviceOrientationEvent","requestPermission","then","permissionState","stopLocate","off","f","_isOutsideMapBounds","latitude","longitude","panTo","_ignoreEvent","padding","requestAnimFrame","_drawCompass","cStyle","_compass","setLatLng","removeFrom","accuracy","mStyle","_circle","setRadius","circle","distance","unit","toFixed","_marker","t","getPopupText","template","bindPopup","_popup","clearLayers","_setCompassHeading","angle","isNaN","parseFloat","isFinite","Math","round","_onCompassNeedsCalibration","e","webkitCompassHeading","absolute","alpha","code","lat","lng","pad","getLatLng","maxBounds","_setClasses","state","removeClass","EventEmitter","i0","Component","Output","Input","NgModule"],"mappings":"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"}