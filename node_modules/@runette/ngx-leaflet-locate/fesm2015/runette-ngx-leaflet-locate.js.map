{"version":3,"file":"runette-ngx-leaflet-locate.js","sources":["../../../node_modules/leaflet.locatecontrol/src/L.Control.Locate.js","../../../src/lib/ngx-leaflet-locate.component.ts","../../../src/lib/ngx-leaflet-locate.module.ts","../../../src/public-api.ts","../../../src/runette-ngx-leaflet-locate.ts"],"sourcesContent":["/*!\nCopyright (c) 2016 Dominik Moritz\n\nThis file is part of the leaflet locate control. It is licensed under the MIT license.\nYou can find the project at: https://github.com/domoritz/leaflet-locatecontrol\n*/\n(function (factory, window) {\n  // see https://github.com/Leaflet/Leaflet/blob/master/PLUGIN-GUIDE.md#module-loaders\n  // for details on how to structure a leaflet plugin.\n\n  // define an AMD module that relies on 'leaflet'\n  if (typeof define === \"function\" && define.amd) {\n    define([\"leaflet\"], factory);\n\n    // define a Common JS module that relies on 'leaflet'\n  } else if (typeof exports === \"object\") {\n    if (typeof window !== \"undefined\" && window.L) {\n      module.exports = factory(L);\n    } else {\n      module.exports = factory(require(\"leaflet\"));\n    }\n  }\n\n  // attach your plugin to the global 'L' variable\n  if (typeof window !== \"undefined\" && window.L) {\n    window.L.Control.Locate = factory(L);\n  }\n})(function (L) {\n  const LDomUtilApplyClassesMethod = (method, element, classNames) => {\n    classNames = classNames.split(\" \");\n    classNames.forEach(function (className) {\n      L.DomUtil[method].call(this, element, className);\n    });\n  };\n\n  const addClasses = (el, names) => LDomUtilApplyClassesMethod(\"addClass\", el, names);\n  const removeClasses = (el, names) => LDomUtilApplyClassesMethod(\"removeClass\", el, names);\n\n  /**\n   * Compatible with L.Circle but a true marker instead of a path\n   */\n  const LocationMarker = L.Marker.extend({\n    initialize(latlng, options) {\n      L.Util.setOptions(this, options);\n      this._latlng = latlng;\n      this.createIcon();\n    },\n\n    /**\n     * Create a styled circle location marker\n     */\n    createIcon() {\n      const opt = this.options;\n\n      let style = \"\";\n\n      if (opt.color !== undefined) {\n        style += `stroke:${opt.color};`;\n      }\n      if (opt.weight !== undefined) {\n        style += `stroke-width:${opt.weight};`;\n      }\n      if (opt.fillColor !== undefined) {\n        style += `fill:${opt.fillColor};`;\n      }\n      if (opt.fillOpacity !== undefined) {\n        style += `fill-opacity:${opt.fillOpacity};`;\n      }\n      if (opt.opacity !== undefined) {\n        style += `opacity:${opt.opacity};`;\n      }\n\n      const icon = this._getIconSVG(opt, style);\n\n      this._locationIcon = L.divIcon({\n        className: icon.className,\n        html: icon.svg,\n        iconSize: [icon.w, icon.h]\n      });\n\n      this.setIcon(this._locationIcon);\n    },\n\n    /**\n     * Return the raw svg for the shape\n     *\n     * Split so can be easily overridden\n     */\n    _getIconSVG(options, style) {\n      const r = options.radius;\n      const w = options.weight;\n      const s = r + w;\n      const s2 = s * 2;\n      const svg =\n        `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${s2}\" height=\"${s2}\" version=\"1.1\" viewBox=\"-${s} -${s} ${s2} ${s2}\">` +\n        '<circle r=\"' +\n        r +\n        '\" style=\"' +\n        style +\n        '\" />' +\n        \"</svg>\";\n      return {\n        className: \"leaflet-control-locate-location\",\n        svg,\n        w: s2,\n        h: s2\n      };\n    },\n\n    setStyle(style) {\n      L.Util.setOptions(this, style);\n      this.createIcon();\n    }\n  });\n\n  const CompassMarker = LocationMarker.extend({\n    initialize(latlng, heading, options) {\n      L.Util.setOptions(this, options);\n      this._latlng = latlng;\n      this._heading = heading;\n      this.createIcon();\n    },\n\n    setHeading(heading) {\n      this._heading = heading;\n    },\n\n    /**\n     * Create a styled arrow compass marker\n     */\n    _getIconSVG(options, style) {\n      const r = options.radius;\n      const w = options.width + options.weight;\n      const h = (r + options.depth + options.weight) * 2;\n      const path = `M0,0 l${options.width / 2},${options.depth} l-${w},0 z`;\n      const svgstyle = `transform: rotate(${this._heading}deg)`;\n      const svg =\n        `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${w}\" height=\"${h}\" version=\"1.1\" viewBox=\"-${w / 2} 0 ${w} ${h}\" style=\"${svgstyle}\">` +\n        '<path d=\"' +\n        path +\n        '\" style=\"' +\n        style +\n        '\" />' +\n        \"</svg>\";\n      return {\n        className: \"leaflet-control-locate-heading\",\n        svg,\n        w,\n        h\n      };\n    }\n  });\n\n  const LocateControl = L.Control.extend({\n    options: {\n      /** Position of the control */\n      position: \"topleft\",\n      /** The layer that the user's location should be drawn on. By default creates a new layer. */\n      layer: undefined,\n      /**\n       * Automatically sets the map view (zoom and pan) to the user's location as it updates.\n       * While the map is following the user's location, the control is in the `following` state,\n       * which changes the style of the control and the circle marker.\n       *\n       * Possible values:\n       *  - false: never updates the map view when location changes.\n       *  - 'once': set the view when the location is first determined\n       *  - 'always': always updates the map view when location changes.\n       *              The map view follows the user's location.\n       *  - 'untilPan': like 'always', except stops updating the\n       *                view if the user has manually panned the map.\n       *                The map view follows the user's location until she pans.\n       *  - 'untilPanOrZoom': (default) like 'always', except stops updating the\n       *                view if the user has manually panned the map.\n       *                The map view follows the user's location until she pans.\n       */\n      setView: \"untilPanOrZoom\",\n      /** Keep the current map zoom level when setting the view and only pan. */\n      keepCurrentZoomLevel: false,\n      /** After activating the plugin by clicking on the icon, zoom to the selected zoom level, even when keepCurrentZoomLevel is true. Set to 'false' to disable this feature. */\n      initialZoomLevel: false,\n      /**\n       * This callback can be used to override the viewport tracking\n       * This function should return a LatLngBounds object.\n       *\n       * For example to extend the viewport to ensure that a particular LatLng is visible:\n       *\n       * getLocationBounds: function(locationEvent) {\n       *    return locationEvent.bounds.extend([-33.873085, 151.219273]);\n       * },\n       */\n      getLocationBounds(locationEvent) {\n        return locationEvent.bounds;\n      },\n      /** Smooth pan and zoom to the location of the marker. Only works in Leaflet 1.0+. */\n      flyTo: false,\n      /**\n       * The user location can be inside and outside the current view when the user clicks on the\n       * control that is already active. Both cases can be configures separately.\n       * Possible values are:\n       *  - 'setView': zoom and pan to the current location\n       *  - 'stop': stop locating and remove the location marker\n       */\n      clickBehavior: {\n        /** What should happen if the user clicks on the control while the location is within the current view. */\n        inView: \"stop\",\n        /** What should happen if the user clicks on the control while the location is outside the current view. */\n        outOfView: \"setView\",\n        /**\n         * What should happen if the user clicks on the control while the location is within the current view\n         * and we could be following but are not. Defaults to a special value which inherits from 'inView';\n         */\n        inViewNotFollowing: \"inView\"\n      },\n      /**\n       * If set, save the map bounds just before centering to the user's\n       * location. When control is disabled, set the view back to the\n       * bounds that were saved.\n       */\n      returnToPrevBounds: false,\n      /**\n       * Keep a cache of the location after the user deactivates the control. If set to false, the user has to wait\n       * until the locate API returns a new location before they see where they are again.\n       */\n      cacheLocation: true,\n      /** If set, a circle that shows the location accuracy is drawn. */\n      drawCircle: true,\n      /** If set, the marker at the users' location is drawn. */\n      drawMarker: true,\n      /** If set and supported then show the compass heading */\n      showCompass: true,\n      /** The class to be used to create the marker. For example L.CircleMarker or L.Marker */\n      markerClass: LocationMarker,\n      /** The class us be used to create the compass bearing arrow */\n      compassClass: CompassMarker,\n      /** Accuracy circle style properties. NOTE these styles should match the css animations styles */\n      circleStyle: {\n        className: \"leaflet-control-locate-circle\",\n        color: \"#136AEC\",\n        fillColor: \"#136AEC\",\n        fillOpacity: 0.15,\n        weight: 0\n      },\n      /** Inner marker style properties. Only works if your marker class supports `setStyle`. */\n      markerStyle: {\n        className: \"leaflet-control-locate-marker\",\n        color: \"#fff\",\n        fillColor: \"#2A93EE\",\n        fillOpacity: 1,\n        weight: 3,\n        opacity: 1,\n        radius: 9\n      },\n      /** Compass */\n      compassStyle: {\n        fillColor: \"#2A93EE\",\n        fillOpacity: 1,\n        weight: 0,\n        color: \"#fff\",\n        opacity: 1,\n        radius: 9, // How far is the arrow is from the center of of the marker\n        width: 9, // Width of the arrow\n        depth: 6 // Length of the arrow\n      },\n      /**\n       * Changes to accuracy circle and inner marker while following.\n       * It is only necessary to provide the properties that should change.\n       */\n      followCircleStyle: {},\n      followMarkerStyle: {\n        // color: '#FFA500',\n        // fillColor: '#FFB000'\n      },\n      followCompassStyle: {},\n      /** The CSS class for the icon. For example fa-location-arrow or fa-map-marker */\n      icon: \"leaflet-control-locate-location-arrow\",\n      iconLoading: \"leaflet-control-locate-spinner\",\n      /** The element to be created for icons. For example span or i */\n      iconElementTag: \"span\",\n      /** The element to be created for the text. For example small or span */\n      textElementTag: \"small\",\n      /** Padding around the accuracy circle. */\n      circlePadding: [0, 0],\n      /** Use metric units. */\n      metric: true,\n      /**\n       * This callback can be used in case you would like to override button creation behavior.\n       * This is useful for DOM manipulation frameworks such as angular etc.\n       * This function should return an object with HtmlElement for the button (link property) and the icon (icon property).\n       */\n      createButtonCallback(container, options) {\n        const link = L.DomUtil.create(\"a\", \"leaflet-bar-part leaflet-bar-part-single\", container);\n        link.title = options.strings.title;\n        link.href = \"#\";\n        link.setAttribute(\"role\", \"button\");\n        const icon = L.DomUtil.create(options.iconElementTag, options.icon, link);\n\n        if (options.strings.text !== undefined) {\n          const text = L.DomUtil.create(options.textElementTag, \"leaflet-locate-text\", link);\n          text.textContent = options.strings.text;\n          link.classList.add(\"leaflet-locate-text-active\");\n          link.parentNode.style.display = \"flex\";\n          if (options.icon.length > 0) {\n            icon.classList.add(\"leaflet-locate-icon\");\n          }\n        }\n\n        return { link, icon };\n      },\n      /** This event is called in case of any location error that is not a time out error. */\n      onLocationError(err, control) {\n        alert(err.message);\n      },\n      /**\n       * This event is called when the user's location is outside the bounds set on the map.\n       * The event is called repeatedly when the location changes.\n       */\n      onLocationOutsideMapBounds(control) {\n        control.stop();\n        alert(control.options.strings.outsideMapBoundsMsg);\n      },\n      /** Display a pop-up when the user click on the inner marker. */\n      showPopup: true,\n      strings: {\n        title: \"Show me where I am\",\n        metersUnit: \"meters\",\n        feetUnit: \"feet\",\n        popup: \"You are within {distance} {unit} from this point\",\n        outsideMapBoundsMsg: \"You seem located outside the boundaries of the map\"\n      },\n      /** The default options passed to leaflets locate method. */\n      locateOptions: {\n        maxZoom: Infinity,\n        watch: true, // if you overwrite this, visualization cannot be updated\n        setView: false // have to set this to false because we have to\n        // do setView manually\n      }\n    },\n\n    initialize(options) {\n      // set default options if nothing is set (merge one step deep)\n      for (const i in options) {\n        if (typeof this.options[i] === \"object\") {\n          L.extend(this.options[i], options[i]);\n        } else {\n          this.options[i] = options[i];\n        }\n      }\n\n      // extend the follow marker style and circle from the normal style\n      this.options.followMarkerStyle = L.extend({}, this.options.markerStyle, this.options.followMarkerStyle);\n      this.options.followCircleStyle = L.extend({}, this.options.circleStyle, this.options.followCircleStyle);\n      this.options.followCompassStyle = L.extend({}, this.options.compassStyle, this.options.followCompassStyle);\n    },\n\n    /**\n     * Add control to map. Returns the container for the control.\n     */\n    onAdd(map) {\n      const container = L.DomUtil.create(\"div\", \"leaflet-control-locate leaflet-bar leaflet-control\");\n      this._container = container;\n      this._map = map;\n      this._layer = this.options.layer || new L.LayerGroup();\n      this._layer.addTo(map);\n      this._event = undefined;\n      this._compassHeading = null;\n      this._prevBounds = null;\n\n      const linkAndIcon = this.options.createButtonCallback(container, this.options);\n      this._link = linkAndIcon.link;\n      this._icon = linkAndIcon.icon;\n\n      L.DomEvent.on(\n        this._link,\n        \"click\",\n        function (ev) {\n          L.DomEvent.stopPropagation(ev);\n          L.DomEvent.preventDefault(ev);\n          this._onClick();\n        },\n        this\n      ).on(this._link, \"dblclick\", L.DomEvent.stopPropagation);\n\n      this._resetVariables();\n\n      this._map.on(\"unload\", this._unload, this);\n\n      return container;\n    },\n\n    /**\n     * This method is called when the user clicks on the control.\n     */\n    _onClick() {\n      this._justClicked = true;\n      const wasFollowing = this._isFollowing();\n      this._userPanned = false;\n      this._userZoomed = false;\n\n      if (this._active && !this._event) {\n        // click while requesting\n        this.stop();\n      } else if (this._active) {\n        const behaviors = this.options.clickBehavior;\n        let behavior = behaviors.outOfView;\n        if (this._map.getBounds().contains(this._event.latlng)) {\n          behavior = wasFollowing ? behaviors.inView : behaviors.inViewNotFollowing;\n        }\n\n        // Allow inheriting from another behavior\n        if (behaviors[behavior]) {\n          behavior = behaviors[behavior];\n        }\n\n        switch (behavior) {\n          case \"setView\":\n            this.setView();\n            break;\n          case \"stop\":\n            this.stop();\n            if (this.options.returnToPrevBounds) {\n              const f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n              f.bind(this._map)(this._prevBounds);\n            }\n            break;\n        }\n      } else {\n        if (this.options.returnToPrevBounds) {\n          this._prevBounds = this._map.getBounds();\n        }\n        this.start();\n      }\n\n      this._updateContainerStyle();\n    },\n\n    /**\n     * Starts the plugin:\n     * - activates the engine\n     * - draws the marker (if coordinates available)\n     */\n    start() {\n      this._activate();\n\n      if (this._event) {\n        this._drawMarker(this._map);\n\n        // if we already have a location but the user clicked on the control\n        if (this.options.setView) {\n          this.setView();\n        }\n      }\n      this._updateContainerStyle();\n    },\n\n    /**\n     * Stops the plugin:\n     * - deactivates the engine\n     * - reinitializes the button\n     * - removes the marker\n     */\n    stop() {\n      this._deactivate();\n\n      this._cleanClasses();\n      this._resetVariables();\n\n      this._removeMarker();\n    },\n\n    /**\n     * Keep the control active but stop following the location\n     */\n    stopFollowing() {\n      this._userPanned = true;\n      this._updateContainerStyle();\n      this._drawMarker();\n    },\n\n    /**\n     * This method launches the location engine.\n     * It is called before the marker is updated,\n     * event if it does not mean that the event will be ready.\n     *\n     * Override it if you want to add more functionalities.\n     * It should set the this._active to true and do nothing if\n     * this._active is true.\n     */\n    _activate() {\n      if (this._active || !this._map) {\n        return;\n      }\n\n      this._map.locate(this.options.locateOptions);\n      this._map.fire(\"locateactivate\", this);\n      this._active = true;\n\n      // bind event listeners\n      this._map.on(\"locationfound\", this._onLocationFound, this);\n      this._map.on(\"locationerror\", this._onLocationError, this);\n      this._map.on(\"dragstart\", this._onDrag, this);\n      this._map.on(\"zoomstart\", this._onZoom, this);\n      this._map.on(\"zoomend\", this._onZoomEnd, this);\n      if (this.options.showCompass) {\n        const oriAbs = \"ondeviceorientationabsolute\" in window;\n        if (oriAbs || \"ondeviceorientation\" in window) {\n          const _this = this;\n          const deviceorientation = function () {\n            L.DomEvent.on(window, oriAbs ? \"deviceorientationabsolute\" : \"deviceorientation\", _this._onDeviceOrientation, _this);\n          };\n          if (DeviceOrientationEvent && typeof DeviceOrientationEvent.requestPermission === \"function\") {\n            DeviceOrientationEvent.requestPermission().then(function (permissionState) {\n              if (permissionState === \"granted\") {\n                deviceorientation();\n              }\n            });\n          } else {\n            deviceorientation();\n          }\n        }\n      }\n    },\n\n    /**\n     * Called to stop the location engine.\n     *\n     * Override it to shutdown any functionalities you added on start.\n     */\n    _deactivate() {\n      if (!this._active || !this._map) {\n        return;\n      }\n\n      this._map.stopLocate();\n      this._map.fire(\"locatedeactivate\", this);\n      this._active = false;\n\n      if (!this.options.cacheLocation) {\n        this._event = undefined;\n      }\n\n      // unbind event listeners\n      this._map.off(\"locationfound\", this._onLocationFound, this);\n      this._map.off(\"locationerror\", this._onLocationError, this);\n      this._map.off(\"dragstart\", this._onDrag, this);\n      this._map.off(\"zoomstart\", this._onZoom, this);\n      this._map.off(\"zoomend\", this._onZoomEnd, this);\n      if (this.options.showCompass) {\n        this._compassHeading = null;\n        if (\"ondeviceorientationabsolute\" in window) {\n          L.DomEvent.off(window, \"deviceorientationabsolute\", this._onDeviceOrientation, this);\n        } else if (\"ondeviceorientation\" in window) {\n          L.DomEvent.off(window, \"deviceorientation\", this._onDeviceOrientation, this);\n        }\n      }\n    },\n\n    /**\n     * Zoom (unless we should keep the zoom level) and an to the current view.\n     */\n    setView() {\n      this._drawMarker();\n      if (this._isOutsideMapBounds()) {\n        this._event = undefined; // clear the current location so we can get back into the bounds\n        this.options.onLocationOutsideMapBounds(this);\n      } else {\n        if (this._justClicked && this.options.initialZoomLevel !== false) {\n          var f = this.options.flyTo ? this._map.flyTo : this._map.setView;\n          f.bind(this._map)([this._event.latitude, this._event.longitude], this.options.initialZoomLevel);\n        } else if (this.options.keepCurrentZoomLevel) {\n          var f = this.options.flyTo ? this._map.flyTo : this._map.panTo;\n          f.bind(this._map)([this._event.latitude, this._event.longitude]);\n        } else {\n          var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n          // Ignore zoom events while setting the viewport as these would stop following\n          this._ignoreEvent = true;\n          f.bind(this._map)(this.options.getLocationBounds(this._event), {\n            padding: this.options.circlePadding,\n            maxZoom: this.options.initialZoomLevel || this.options.locateOptions.maxZoom\n          });\n          L.Util.requestAnimFrame(function () {\n            // Wait until after the next animFrame because the flyTo can be async\n            this._ignoreEvent = false;\n          }, this);\n        }\n      }\n    },\n\n    /**\n     *\n     */\n    _drawCompass() {\n      if (!this._event) {\n        return;\n      }\n\n      const latlng = this._event.latlng;\n\n      if (this.options.showCompass && latlng && this._compassHeading !== null) {\n        const cStyle = this._isFollowing() ? this.options.followCompassStyle : this.options.compassStyle;\n        if (!this._compass) {\n          this._compass = new this.options.compassClass(latlng, this._compassHeading, cStyle).addTo(this._layer);\n        } else {\n          this._compass.setLatLng(latlng);\n          this._compass.setHeading(this._compassHeading);\n          // If the compassClass can be updated with setStyle, update it.\n          if (this._compass.setStyle) {\n            this._compass.setStyle(cStyle);\n          }\n        }\n        //\n      }\n      if (this._compass && (!this.options.showCompass || this._compassHeading === null)) {\n        this._compass.removeFrom(this._layer);\n        this._compass = null;\n      }\n    },\n\n    /**\n     * Draw the marker and accuracy circle on the map.\n     *\n     * Uses the event retrieved from onLocationFound from the map.\n     */\n    _drawMarker() {\n      if (this._event.accuracy === undefined) {\n        this._event.accuracy = 0;\n      }\n\n      const radius = this._event.accuracy;\n      const latlng = this._event.latlng;\n\n      // circle with the radius of the location's accuracy\n      if (this.options.drawCircle) {\n        const style = this._isFollowing() ? this.options.followCircleStyle : this.options.circleStyle;\n\n        if (!this._circle) {\n          this._circle = L.circle(latlng, radius, style).addTo(this._layer);\n        } else {\n          this._circle.setLatLng(latlng).setRadius(radius).setStyle(style);\n        }\n      }\n\n      let distance;\n      let unit;\n      if (this.options.metric) {\n        distance = radius.toFixed(0);\n        unit = this.options.strings.metersUnit;\n      } else {\n        distance = (radius * 3.2808399).toFixed(0);\n        unit = this.options.strings.feetUnit;\n      }\n\n      // small inner marker\n      if (this.options.drawMarker) {\n        const mStyle = this._isFollowing() ? this.options.followMarkerStyle : this.options.markerStyle;\n        if (!this._marker) {\n          this._marker = new this.options.markerClass(latlng, mStyle).addTo(this._layer);\n        } else {\n          this._marker.setLatLng(latlng);\n          // If the markerClass can be updated with setStyle, update it.\n          if (this._marker.setStyle) {\n            this._marker.setStyle(mStyle);\n          }\n        }\n      }\n\n      this._drawCompass();\n\n      const t = this.options.strings.popup;\n      function getPopupText() {\n        if (typeof t === \"string\") {\n          return L.Util.template(t, { distance, unit });\n        } else if (typeof t === \"function\") {\n          return t({ distance, unit });\n        } else {\n          return t;\n        }\n      }\n      if (this.options.showPopup && t && this._marker) {\n        this._marker.bindPopup(getPopupText())._popup.setLatLng(latlng);\n      }\n      if (this.options.showPopup && t && this._compass) {\n        this._compass.bindPopup(getPopupText())._popup.setLatLng(latlng);\n      }\n    },\n\n    /**\n     * Remove the marker from map.\n     */\n    _removeMarker() {\n      this._layer.clearLayers();\n      this._marker = undefined;\n      this._circle = undefined;\n    },\n\n    /**\n     * Unload the plugin and all event listeners.\n     * Kind of the opposite of onAdd.\n     */\n    _unload() {\n      this.stop();\n      this._map.off(\"unload\", this._unload, this);\n    },\n\n    /**\n     * Sets the compass heading\n     */\n    _setCompassHeading(angle) {\n      if (!isNaN(parseFloat(angle)) && isFinite(angle)) {\n        angle = Math.round(angle);\n\n        this._compassHeading = angle;\n        L.Util.requestAnimFrame(this._drawCompass, this);\n      } else {\n        this._compassHeading = null;\n      }\n    },\n\n    /**\n     * If the compass fails calibration just fail safely and remove the compass\n     */\n    _onCompassNeedsCalibration() {\n      this._setCompassHeading();\n    },\n\n    /**\n     * Process and normalise compass events\n     */\n    _onDeviceOrientation(e) {\n      if (!this._active) {\n        return;\n      }\n\n      if (e.webkitCompassHeading) {\n        // iOS\n        this._setCompassHeading(e.webkitCompassHeading);\n      } else if (e.absolute && e.alpha) {\n        // Android\n        this._setCompassHeading(360 - e.alpha);\n      }\n    },\n\n    /**\n     * Calls deactivate and dispatches an error.\n     */\n    _onLocationError(err) {\n      // ignore time out error if the location is watched\n      if (err.code == 3 && this.options.locateOptions.watch) {\n        return;\n      }\n\n      this.stop();\n      this.options.onLocationError(err, this);\n    },\n\n    /**\n     * Stores the received event and updates the marker.\n     */\n    _onLocationFound(e) {\n      // no need to do anything if the location has not changed\n      if (this._event && this._event.latlng.lat === e.latlng.lat && this._event.latlng.lng === e.latlng.lng && this._event.accuracy === e.accuracy) {\n        return;\n      }\n\n      if (!this._active) {\n        // we may have a stray event\n        return;\n      }\n\n      this._event = e;\n\n      this._drawMarker();\n      this._updateContainerStyle();\n\n      switch (this.options.setView) {\n        case \"once\":\n          if (this._justClicked) {\n            this.setView();\n          }\n          break;\n        case \"untilPan\":\n          if (!this._userPanned) {\n            this.setView();\n          }\n          break;\n        case \"untilPanOrZoom\":\n          if (!this._userPanned && !this._userZoomed) {\n            this.setView();\n          }\n          break;\n        case \"always\":\n          this.setView();\n          break;\n        case false:\n          // don't set the view\n          break;\n      }\n\n      this._justClicked = false;\n    },\n\n    /**\n     * When the user drags. Need a separate event so we can bind and unbind event listeners.\n     */\n    _onDrag() {\n      // only react to drags once we have a location\n      if (this._event && !this._ignoreEvent) {\n        this._userPanned = true;\n        this._updateContainerStyle();\n        this._drawMarker();\n      }\n    },\n\n    /**\n     * When the user zooms. Need a separate event so we can bind and unbind event listeners.\n     */\n    _onZoom() {\n      // only react to drags once we have a location\n      if (this._event && !this._ignoreEvent) {\n        this._userZoomed = true;\n        this._updateContainerStyle();\n        this._drawMarker();\n      }\n    },\n\n    /**\n     * After a zoom ends update the compass and handle sideways zooms\n     */\n    _onZoomEnd() {\n      if (this._event) {\n        this._drawCompass();\n      }\n\n      if (this._event && !this._ignoreEvent) {\n        // If we have zoomed in and out and ended up sideways treat it as a pan\n        if (this._marker && !this._map.getBounds().pad(-0.3).contains(this._marker.getLatLng())) {\n          this._userPanned = true;\n          this._updateContainerStyle();\n          this._drawMarker();\n        }\n      }\n    },\n\n    /**\n     * Compute whether the map is following the user location with pan and zoom.\n     */\n    _isFollowing() {\n      if (!this._active) {\n        return false;\n      }\n\n      if (this.options.setView === \"always\") {\n        return true;\n      } else if (this.options.setView === \"untilPan\") {\n        return !this._userPanned;\n      } else if (this.options.setView === \"untilPanOrZoom\") {\n        return !this._userPanned && !this._userZoomed;\n      }\n    },\n\n    /**\n     * Check if location is in map bounds\n     */\n    _isOutsideMapBounds() {\n      if (this._event === undefined) {\n        return false;\n      }\n      return this._map.options.maxBounds && !this._map.options.maxBounds.contains(this._event.latlng);\n    },\n\n    /**\n     * Toggles button class between following and active.\n     */\n    _updateContainerStyle() {\n      if (!this._container) {\n        return;\n      }\n\n      if (this._active && !this._event) {\n        // active but don't have a location yet\n        this._setClasses(\"requesting\");\n      } else if (this._isFollowing()) {\n        this._setClasses(\"following\");\n      } else if (this._active) {\n        this._setClasses(\"active\");\n      } else {\n        this._cleanClasses();\n      }\n    },\n\n    /**\n     * Sets the CSS classes for the state.\n     */\n    _setClasses(state) {\n      if (state == \"requesting\") {\n        removeClasses(this._container, \"active following\");\n        addClasses(this._container, \"requesting\");\n\n        removeClasses(this._icon, this.options.icon);\n        addClasses(this._icon, this.options.iconLoading);\n      } else if (state == \"active\") {\n        removeClasses(this._container, \"requesting following\");\n        addClasses(this._container, \"active\");\n\n        removeClasses(this._icon, this.options.iconLoading);\n        addClasses(this._icon, this.options.icon);\n      } else if (state == \"following\") {\n        removeClasses(this._container, \"requesting\");\n        addClasses(this._container, \"active following\");\n\n        removeClasses(this._icon, this.options.iconLoading);\n        addClasses(this._icon, this.options.icon);\n      }\n    },\n\n    /**\n     * Removes all classes from button.\n     */\n    _cleanClasses() {\n      L.DomUtil.removeClass(this._container, \"requesting\");\n      L.DomUtil.removeClass(this._container, \"active\");\n      L.DomUtil.removeClass(this._container, \"following\");\n\n      removeClasses(this._icon, this.options.iconLoading);\n      addClasses(this._icon, this.options.icon);\n    },\n\n    /**\n     * Reinitializes state variables.\n     */\n    _resetVariables() {\n      // whether locate is active or not\n      this._active = false;\n\n      // true if the control was clicked for the first time\n      // we need this so we can pan and zoom once we have the location\n      this._justClicked = false;\n\n      // true if the user has panned the map after clicking the control\n      this._userPanned = false;\n\n      // true if the user has zoomed the map after clicking the control\n      this._userZoomed = false;\n    }\n  });\n\n  L.control.locate = (options) => new L.Control.Locate(options);\n\n  return LocateControl;\n}, window);\n","/// <reference path=\"../../node_modules/@types/leaflet.locatecontrol/index.d.ts\" />\nimport { Component, OnInit, OnDestroy, Input, Output, EventEmitter} from '@angular/core';\nimport {Map, control, Control, LocationEvent} from 'leaflet';\nimport '../../../../node_modules/leaflet.locatecontrol/dist/L.Control.Locate.min.js';\n\ninterface customMap extends Map {\n  _unload: any;\n}\n\n@Component({\n  selector: 'leaflet-locate-control',\n  template: '',\n  styleUrls: []\n})\nexport class NgxLeafletLocateComponent implements OnInit, OnDestroy {\n  private _map?: Map;\n  @Output() location$: EventEmitter<LocationEvent> = new EventEmitter;\n  public control: Control.Locate = new Control.Locate();\n\n  constructor() { \n  };\n\n  ngOnInit() {\n  };\n\n  ngOnDestroy() {\n    if (this.control && this.map) {\n      this.control.stop();\n      this._map?.off(\"unload\", (this.map as customMap)?._unload, this.control);\n    }\n    if (this._map && this.control) this._map.removeControl(this.control);\n    this._map?.off('locationfound')\n  };\n\n  @Input() options: Control.LocateOptions= {};\n\n  @Input() set map(map: Map | undefined){\n    if (map) {\n      this._map = map;\n      this.control =  control.locate(this.options);\n      this.control.addTo(map);\n      let location$ = this.location$;\n      map.on('locationfound', e => {\n        location$.emit(e);\n      });\n    }\n  }\n  \n  get map(): Map | undefined {\n    return this._map\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxLeafletLocateComponent } from './ngx-leaflet-locate.component';\n\n\n@NgModule({\n  declarations: [NgxLeafletLocateComponent],\n  imports: [],\n  exports: [\n    NgxLeafletLocateComponent,\n  ]\n})\nexport class NgxLeafletLocateModule { }\n","/*\n * Public API Surface of ngx-leaflet-locate\n */\n\nexport * from './lib/ngx-leaflet-locate.component';\nexport * from './lib/ngx-leaflet-locate.module';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["factory","window","define","amd","L","module","require","Control","Locate","LDomUtilApplyClassesMethod","method","element","classNames","split","forEach","className","DomUtil","call","this","addClasses","el","names","removeClasses","LocationMarker","Marker","extend","initialize","latlng","options","Util","setOptions","_latlng","createIcon","opt","let","style","undefined","color","weight","fillColor","fillOpacity","opacity","icon","_getIconSVG","_locationIcon","divIcon","html","svg","iconSize","w","h","setIcon","r","radius","s","s2","setStyle","CompassMarker","heading","_heading","setHeading","width","depth","path","LocateControl","position","layer","setView","keepCurrentZoomLevel","initialZoomLevel","getLocationBounds","locationEvent","bounds","flyTo","clickBehavior","inView","outOfView","inViewNotFollowing","returnToPrevBounds","cacheLocation","drawCircle","drawMarker","showCompass","markerClass","compassClass","circleStyle","markerStyle","compassStyle","followCircleStyle","followMarkerStyle","followCompassStyle","iconLoading","iconElementTag","textElementTag","circlePadding","metric","createButtonCallback","container","link","create","title","strings","href","setAttribute","text","textContent","classList","add","parentNode","display","length","onLocationError","err","control","alert","message","onLocationOutsideMapBounds","stop","outsideMapBoundsMsg","showPopup","metersUnit","feetUnit","popup","locateOptions","maxZoom","Infinity","watch","i","onAdd","map","linkAndIcon","_container","_map","_layer","LayerGroup","addTo","_event","_compassHeading","_prevBounds","_link","_icon","DomEvent","on","ev","stopPropagation","preventDefault","_onClick","_resetVariables","_unload","_justClicked","wasFollowing","_isFollowing","_userPanned","_userZoomed","_active","behaviors","behavior","getBounds","contains","flyToBounds","fitBounds","bind","start","_updateContainerStyle","_activate","_drawMarker","_deactivate","_cleanClasses","_removeMarker","stopFollowing","locate","fire","_onLocationFound","_onLocationError","_onDrag","_onZoom","_onZoomEnd","oriAbs","_this","deviceorientation","_onDeviceOrientation","DeviceOrientationEvent","requestPermission","then","permissionState","stopLocate","off","f","_isOutsideMapBounds","latitude","longitude","panTo","_ignoreEvent","padding","requestAnimFrame","_drawCompass","cStyle","_compass","setLatLng","removeFrom","accuracy","mStyle","_circle","setRadius","circle","distance","unit","toFixed","_marker","t","getPopupText","template","bindPopup","_popup","clearLayers","_setCompassHeading","angle","isNaN","parseFloat","isFinite","Math","round","_onCompassNeedsCalibration","e","webkitCompassHeading","absolute","alpha","code","lat","lng","pad","getLatLng","maxBounds","_setClasses","state","removeClass"],"mappings":"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"}